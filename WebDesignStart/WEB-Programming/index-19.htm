<html><head><META http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>Internet Programming school</title><meta content="text/html; charset=windows-1251" http-equiv="Content-Type"><link href="lesson.css" tppabs="http://ips.ifmo.ru/css/lesson.css" type="text/css" rel="stylesheet"><link href="style.css" tppabs="http://ips.ifmo.ru/css/style.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="../../../../js/upmenu.js" language="JavaScript"> </script><script type="text/javascript" src="../../../../js/popupmenu.js" language="JavaScript"> </script><script type="text/javascript" src="../../../../js/tree.js" language="JavaScript"> </script></head><body marginwidth="0" marginheight="0" topmargin="0" leftmargin="0" bgcolor="#ffffff"><table cellspacing="0" cellpadding="0" height="100%" width="100%"><tr><td><table width="100%"><tbody><tr><td height="59"><img src="logo.gif" tppabs="http://ips.ifmo.ru/img/logo.gif" width="310" height="45"></td><td align="right"><a href="javascript:if(confirm('http://ips.ifmo.ru/personal/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/personal/'" tppabs="http://ips.ifmo.ru/personal/" class="up">Вход</a><span> | </span><a href="javascript:if(confirm('http://ips.ifmo.ru/main/siteabout/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/main/siteabout/'" tppabs="http://ips.ifmo.ru/main/siteabout/" class="up">Карта сайта</a><span> | </span><a href="javascript:if(confirm('http://ips.ifmo.ru/about/contacts/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/about/contacts/'" tppabs="http://ips.ifmo.ru/about/contacts/" class="up">Контакты</a></td></tr></tbody></table></td></tr><tr><td><table border="0" width="100%" cellPadding="0" cellSpacing="0"><tbody><tr><td align="right" height="1" colspan="2"><img src="menu13.gif" tppabs="http://ips.ifmo.ru/img/menu13.gif"></td></tr><tr bgcolor="#000934"><td><img src="menu21.gif" tppabs="http://ips.ifmo.ru/img/menu21.gif" width="267" height="36"></td><td align="right"><img src="menu23.gif" tppabs="http://ips.ifmo.ru/img/menu23.gif" width="512" height="36"></td></tr><tr bgColor="#a45ad5"><td background="menu_back.gif" tppabs="http://ips.ifmo.ru/img/menu_back.gif" class="menu" height="24" colSpan="2">&nbsp;<a title="Главная" href="javascript:if(confirm('http://ips.ifmo.ru/main/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/main/'" tppabs="http://ips.ifmo.ru/main/">ГЛАВНАЯ</a>&nbsp;&nbsp;<a title="О проекте" href="javascript:if(confirm('http://ips.ifmo.ru/about/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/about/'" tppabs="http://ips.ifmo.ru/about/">О ПРОЕКТЕ</a>&nbsp;&nbsp;<a title="Академия программирования" href="javascript:if(confirm('http://ips.ifmo.ru/academy/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/academy/'" tppabs="http://ips.ifmo.ru/academy/">АКАДЕМИЯ ПРОГРАММИРОВАНИЯ</a>&nbsp;&nbsp;<a title="Учебные курсы" href="javascript:if(confirm('http://ips.ifmo.ru/courses/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/courses/'" tppabs="http://ips.ifmo.ru/courses/"><font color="yellow">УЧЕБНЫЕ КУРСЫ</font></a>&nbsp;&nbsp;<a title="Об олимпиадах" href="javascript:if(confirm('http://ips.ifmo.ru/olymp/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/olymp/'" tppabs="http://ips.ifmo.ru/olymp/">ОЛИМПИАДЫ</a>&nbsp;&nbsp;<a title="Персональная страница" href="javascript:if(confirm('http://ips.ifmo.ru/personal/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://ips.ifmo.ru/personal/'" tppabs="http://ips.ifmo.ru/personal/">МОЙ IPS</a>&nbsp;&nbsp;</td></tr><tr bgcolor="#000934"><td></td><td align="right"><img src="menu33.gif" tppabs="http://ips.ifmo.ru/img/menu33.gif" width="512" height="5"></td></tr><tr bgcolor="#E2D3F5"><td></td><td align="right"><img src="menu43_.gif" tppabs="http://ips.ifmo.ru/img/menu43_.gif" width="512" height="6"></td></tr></tbody></table></td></tr><tr><td height="100%"><table height="100%" width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="194" class="lmenu" valign="top"><table class="lmenu" border="0" width="194"><tbody><tr><td width="10"></td><td width="10"></td><td width="10"></td><td width="100%"></td></tr><tr><td width="10" valign="top"><img onclick="DisplayBranch('webprog/')" src="r_bull.gif" tppabs="http://ips.ifmo.ru/img/r_bull.gif" height="11"></td><td colspan="3" class="lmenuw"><a title="Клиентское Web-программирование" class="lmenu1" href="index.htm" tppabs="http://ips.ifmo.ru/courses/webprog/">Курс III</a></td></tr><tr><td colspan="4"><div show="true" id="webprog/"><table class="lmenu" width="100%"><tr><td width="10"></td><td width="10"></td><td width="10"></td><td width="100%"></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/ann/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="2"><a title=" " class="lmenu2" href="index-1.htm" tppabs="http://ips.ifmo.ru/courses/webprog/ann/">Аннотация</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="2"><a title="Язык сценариев JavaScript" class="lmenu2" href="index-2.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/">Часть I</a></td></tr><tr><td colspan="4"><div show="" id="webprog/part1/"><table class="lmenu" width="100%"><tr><td width="10"></td><td width="10"></td><td width="10"></td><td width="100%"></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l1/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Модель клиент-сервер в Интернете" class="lmenu3" href="index-3.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l1/">Урок 1</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l2/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Сценарии JavaScript в документах HTML" class="lmenu3" href="index-4.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l2/">Урок 2</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l3/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Переменные и литералы" class="lmenu3" href="index-5.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l3/">Урок 3</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l4/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Выражения и операции" class="lmenu3" href="index-6.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l4/">Урок 4</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l5/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Операторы" class="lmenu3" href="index-7.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l5/">Урок 5</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l6/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Функции" class="lmenu3" href="index-8.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l6/">Урок 6</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l7/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Встроенные объекты (1)" class="lmenu3" href="index-9.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l7/">Урок 7</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l8/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Встроенные объекты (2)" class="lmenu3" href="index-10.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l8/">Урок 8</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part1/l9/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Создание собственных объектов" class="lmenu3" href="index-11.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part1/l9/">Урок 9</a></td></tr></table></div></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part2/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="2"><a title="Среда клиента" class="lmenu2" href="index-12.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part2/">Часть II</a></td></tr><tr><td colspan="4"><div show="" id="webprog/part2/"><table class="lmenu" width="100%"><tr><td width="10"></td><td width="10"></td><td width="10"></td><td width="100%"></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part2/l1/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Объектная модель MS Internet Explorer" class="lmenu3" href="index-13.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part2/l1/">Урок 10</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part2/l2/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Объекты доступа к странице и ее элементам" class="lmenu3" href="index-14.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part2/l2/">Урок 11</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part2/l3/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Обработка событий в MS Internet Explorer" class="lmenu3" href="index-15.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part2/l3/">Урок 12</a></td></tr></table></div></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part3/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="2" class="lmenuw"><a title="Динамический HTML" class="lmenu2" href="index-16.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part3/">Часть III</a></td></tr><tr><td colspan="4"><div show="true" id="webprog/part3/"><table class="lmenu" width="100%"><tr><td width="10"></td><td width="10"></td><td width="10"></td><td width="100%"></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part3/l1/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Объектная модель документа DHTML" class="lmenu3" href="index-17.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l1/">Урок 13</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part3/l2/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1"><a title="Примеры динамических страниц HTML" class="lmenu3" href="index-18.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l2/">Урок 14</a></td></tr><tr><td>&nbsp;&nbsp;&nbsp;</td><td>&nbsp;&nbsp;&nbsp;</td><td width="10" valign="top"><img onclick="DisplayBranch('webprog/part3/l3/')" src="w_bull.gif" tppabs="http://ips.ifmo.ru/img/w_bull.gif" height="11"></td><td colspan="1" class="lmenuw">Урок 15</td></tr></table></div></td></tr></table></div></td></tr></tbody></table><br><br><br><table align="center"><tbody><tr><td><a href="javascript:if(confirm('http://www.ifmo.ru/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.ifmo.ru/'" tppabs="http://www.ifmo.ru/" title="Institute of fine mechanics and optics"><img border="0" src="ifmo.gif" tppabs="http://ips.ifmo.ru/img/ifmo.gif" height="29" width="64"></a></td></tr></tbody></table></td><td height="100%" valign="top"><table class="body"><tr><td><p class="link"><a href="index.htm" tppabs="http://ips.ifmo.ru/courses/webprog/" class="up">Клиентское Web-программирование</a>&nbsp;&raquo;&nbsp;<a href="index-16.htm" tppabs="http://ips.ifmo.ru/courses/webprog/part3/" class="up">Часть III</a>&nbsp;&raquo;&nbsp;Урок 15</p><p class="header">Объектная модель документа DOM</p><p> Объектная модель, реализованная в Internet Explorer 5.0, полностью соответствует рекомендациям REC-DOM-Level-1-19981001 Консорциума WWW. В ней, как и в модели DHTML, документ представляется в виде логической древовидной структуры, но она предоставляет программисту большие удобства при работе с иерархической структурой объектов документа, чем объектная модель DHTML, позволяя: </p><ul type="disk"><li><p>Перемещать часть структуры документа в другое место, не разрушая и не создавая ее заново </p></li><li><p>Создавать новые элементы и присоединять их к структуре документа в любом ее месте </p></li><li><p>Организовывать и манипулировать новыми или существующими ветвями структуры фрагмента документа до помещения объектов в структурное дерево документа </p></li></ul><p> Для понимания объектной модели документов важно осознавать, что логическая древовидная структура представления документа никак не связана с реализацией этой модели именно в виде древовидной структуры. Рекомендации не регламентируют способ реализации модели, она может быть произвольной. Основное - это принцип структурного изоморфизма: две реализации объектной модели документа, используемые для представления одного и того же документа, создадут одну и ту же структурную модель с одинаковыми объектами и их связями. </p><p> Другой важный аспект модели DOM - она оперирует с объектами в полном соответствии с традиционными объектно-ориентированными технологиями: все элементы документа представляются в виде объектов. В узлах структурной логической схемы находятся объекты, а не данные, со всеми присущими объектам свойствами и поведением. </p><p> Объектная модель документов, таким образом, как объектная модель, определяет: </p><ul type="disk"><li><p>интерфейсы и объекты, используемые для представления документа и манипулирования с ним; </p></li><li><p>семантику (смысл) этих интерфейсов и объектов, включая и поведение, и атрибуты; </p></li><li><p>"родственные" связи и взаимодействие между этими интерфейсами и объектами. </p></li></ul><a name=""></a><h2> Узлы объектной модели DOM </h2><p> Объектная модель документа представляется <em>узлами</em> (<tt>node</tt>), расположенными в виде иерархической структуры дерева. Концепция объектной модели не привязана ни к какому конкретному представлению документа (HTML, XML, SGML). Она всего лишь описывает логическую организацию документа. Ее реализация в конкретной системе представления документов ставит в соответствие узлам реальные элементы. В объектной модели документа, реализованной для HTML, в узлах могут находиться любые элементы HTML или текст, называемые <em>узловыми элементами</em>. </p><p> Узлы в модели DOM документа HTML могут быть следующих типов: </p><table cellspacing="0" cellpadding="2" border="1"><tr align="center"><th>Тип</th><th>Что представляет</th></tr><tr align="center"><td align="left">1</td><td align="left">Элемент HTML</td></tr><tr align="center"><td align="left">3</td><td align="left">Текстовое содержимое тега HTML</td></tr><tr align="center"><td align="left">8</td><td align="left">Комментарий HTML</td></tr><tr align="center"><td align="left">9</td><td align="left">Корневой элемент иерархической структуры</td></tr><tr align="center"><td align="left">11</td><td align="left">Фрагмент документа</td></tr></table><br><p> Простейший документ HTML, состоящий из пустых элементов <tt>HEAD</tt> и <tt>BODY</tt> в объектной модели DOM будет представлен деревом, показанном на рисунке: </p><a name="ris1"><table align="center" class="figure" width="100%"><tr><td align="center"><img src="img1-3.gif" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l3/img1.gif"></td></tr><tr align="center"><td>Рис. 1.</td></tr></table></a><p> Во главе иерархии находится элемент типа 9 с именем <tt>#document</tt>, который порождает узел HTML, от которого уже и происходят узлы <tt>HEAD</tt> и <tt>BODY</tt> (все типа 1). </p><p> Текстовое содержимое элемента HTML хранится в специальном текстовом узле (тип 3) с именем <tt>#text</tt>, порождаемом узлом элемента. Причем текстовых узлов может быть несколько, если содержимое элемента представлено размеченным текстом HTML. Эти-то вложенные элементы HTML и разбивают текстовое содержимое элемента на ряд текстовых узлов. </p><p> Например, рассмотрим следующий фрагмент документа HTML: </p><dir><pre>
&lt;P&gt;Это &lt;B&gt;содержимое&lt;/B&gt; абзаца &lt;I&gt;документа&lt;/I&gt; HTML&lt;/P&gt;
  </pre></dir><p> В объектной модели DOM он будет представлен следующим иерархическим деревом: </p><a name="ris2"><table align="center" class="figure" width="100%"><tr><td align="center"><img src="img2-2.gif" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l3/img2.gif"></td></tr><tr align="center"><td>Рис. 2.</td></tr></table></a><p> На рисунке в текстовых узлах также представлено их содержимое. В DOM HTML содержимое, получаемое с помощью свойства <tt>nodeValue</tt> узла может быть только у текстовых узлов и узлов комментария (свойство  <tt>nodeName</tt> равно <tt>#comment</tt>), являющихся листьями иерархического дерева объектов документа. </p><a name=""></a><h2> Перемещение по объектной модели </h2><p> К узлам, и даже целым ветвям, можно получить доступ из сценария JavaScript, встроенного в документ. Концепция объектной модели документа позволяет изменить узел или целую ветвь структуры, не разрушая ее. Это приводит к более простому и ясному коду по сравнению с кодом, реализующим изменение структуры документа в объектной модели DHTML. </p><p> На примере структуры, создаваемой вложенными списками, продемонстрируем, с помощью каких свойств объектов в модели DOM можно перемещаться по ее узлам: </p><dir><pre>
&lt;UL ID="parent"&gt;
   &lt;LI ID="Node1"&gt;Узел 1
   &lt;LI ID="Node2"&gt;Узел 2
      &lt;UL ID="inside"&gt;
         &lt;LI ID="Child1"&gt;Потомок 1
         &lt;LI ID="Child2"&gt;Потомок 2
         &lt;LI ID="Child3"&gt;Потомок 3
      &lt;/UL&gt;
   &lt;LI ID="Node3"&gt;Узел 3
&lt;/UL&gt;
   </pre></dir><p> В объектной модели документов этот фрагмент будет представлен в виде структуры с отношениями "родства", показанной на рисунке: </p><a name="ris3"><table align="center" class="figure" width="100%"><tr><td align="center"><img src="img3-2.gif" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l3/img3.gif"></td></tr><tr align="center"><td>Рис. 3.</td></tr></table></a><p> Элементы с именами <tt>Node1</tt>, <tt>Node2</tt> и <tt>Node3</tt> являются узлами-потомками элемента-родителя с именем parent. В семействе <tt>childNodes</tt> объекта <tt>parent</tt> хранятся ссылки на всех потомков этого элемента (<tt>Node1</tt>, <tt>Node2</tt> и <tt>Node3</tt>). Для получения ссылок на первого и последнего потомка узла в объектной модели предусмотрены соответственно свойства <tt>firstChild</tt> и <tt>lastChild</tt>. </p><p> Свойство <tt>parentNode</tt> объектов-потомков возвращает ссылку родителя объектов, поэтому значением этих свойств объектов <tt>Node1</tt>,  <tt>Node2</tt> и <tt>Node3</tt> будет ссылка на узел <tt>parent</tt>. </p><p> Объекты <tt>Node1</tt>, <tt>Node2</tt> и <tt>Node3</tt> являются ближайшими родственниками одного поколения и открываются друг другу с помощью своих свойств <tt>previousSibling</tt> (предыдущий ближайший родственник) и <tt>nextSibling</tt> (следующий ближайший родственник). Если у элемента-узла нет соответствующих ближайших родственников, то эти свойства возвращают значение <tt>null</tt>. </p><p> Конечно, если все элементы HTML документа заданы с уникальными атрибутами <tt>ID</tt>, то разработчику документа достаточно просто в сценариях получать ссылки на такие объекты-узлы (значение атрибута ID элемента является именем соответствующего ему объекта в языках сценариев с использованием модели DHTML и DOM). Но идентифицировать все элементы страницы дело утомительное, поэтому для перемещения по объектной модели можно использовать указанные выше свойства узлов. </p><p> Для изменения, установки или получения содержимого текстового узла (узлы остальных типов не имеют текстового содержимого ) в DOM используется свойство <tt>nodeValue</tt>, тогда как в модели DHTML следует применять свойства <tt>innerHTML</tt> и <tt>innerText</tt> для любого элемента HTML: </p><dir><pre>
// Объектная модель DOM
Node.childNodes[0].nodeValue = "Новое содержимое";
// Модель DHTML
Node.innerHTML = "Новое содержимое";
   </pre></dir><p> Отметим отличие этих двух моделей при доступе к текстовому содержимому объектов. В DOM текстовое содержимое элемента HTML может храниться в одном или нескольких узлах-потомках типа 3, непосредственно порождаемых элементом HTML. Тогда как в объектной модели DHTML достаточно использовать одно из свойств <tt>innerHTML</tt> или <tt>innerText</tt> объекта, соответствующего элементу HTML. </p><p> Для доступа к объектной модели DOM загруженной в браузер страницы HTML прежде всего необходимо иметь ссылку на корневой элемент <tt>#document</tt>. Она создается автоматически и хранится в объекте <tt>window.document</tt>. Получить в DOM ссылку на корневой объект документа, соответствующий элементу, задаваемому тегом <tt>&lt;HTML&gt;</tt> можно единственным способом - использовать свойство <tt>documentElement</tt> объекта  <tt>document</tt>. После чего, используя приведенные выше свойства узлов DOM, переместиться к требуемому элементу HTML и его содержимому. </p><a name=""></a><h2> Изменение объектной модели документа </h2><p> Каждый узловой элемент порождается другим узловым элементом и может сам выступить родителем других узлов-элементов (за исключением узла <tt>#text</tt>). Объектная модель DOM предоставляет возможность в сценарии создать узел, соответствующий любому элементу HTML, задать значения его атрибутов, а затем встроить его в существующую модель документа, что приведет к автоматическому изменению вида документа в браузере. </p><p> Создание узла любого типа выполняется методами объекта <tt>document</tt> - <tt>createElement()</tt> создает узел типа 1, <tt>createTextNode()</tt> узел типа 3, <tt>createComment()</tt> узел типа 8 и <tt>createDocumentFragment()</tt> узел типа 11. </p><p> В метод  <tt>createElement()</tt> передается строка, соответствующая открывающему тегу создаваемого элемента вместе с заданными атрибутами: </p><dir><pre>
var newParagraph = document.createElement('&lt;p id="par1"&gt;');
  </pre></dir><p> Если не надо задавать атрибуты вновь создаваемого элемента или используются их значения по умолчанию, то для создания нового элемента достаточно только его HTML-имя: </p><dir><pre>
var newParagraph = document.createElement('P');
  </pre></dir><p> После создания, если потребуется, атрибуты становятся доступными как свойства созданного объекта: </p><dir><pre>
newParagraph.style.backgroundColor = 'gray';
  </pre></dir><p> В методы <tt>createTextNode()</tt> и <tt>createComment()</tt> передается текстовая строка, являющаяся содержимым указанных узлов, получаемое через их свойство <tt>nodeValue</tt>: </p><dir><pre>
var newTextElement = document.createTextNode('xxxxx');
var newComment = document.createComment('yyyyyyyyyy');
  </pre></dir><p> У метода создания фрагмента документа параметров <tt>createDocumentFragment()</tt> нет: </p><dir><pre>
var newFragment = document.createDocumentFragment();
  </pre></dir><p> При создании новых объектов и встраивания их в существующую структуру документа следует формировать объекты с правильной структурой, соответствующей их представлениям в объектной модели документа. Не соблюдение этих правил может привести к неправильно сформированному документу и, в конечном итоге, к его неправильному отображению браузером. </p><p> Рассмотрим на примере таблицы HTML процесс динамического создания элемента и встраивания его в документ HTML. Любая таблица объектной модели документа обязательно состоит, по крайней мере, из двух узлов: <tt>TABLE</tt> и <tt>TBODY</tt>. Поэтому при динамическом создании таблиц не следует забывать об этом обстоятельстве: </p><dir><pre>
var Table=document.createElement('TABLE');
var TBody=document.createElement('TBODY');
var Row=document.createElement('TR');
var Cell1=document.createElement('TD');
var Cell2=Cell1.cloneNode();
Row.appendChild(Cell1);
Row.appendChild(Cell2);
Table.appendChild(TBody);
TBody.appendChild(Row);
document.body.appendChild(Table);
Cell1.appendChild(document.createTextNode('Ячейка 1'));
Cell2.appendChild(document.createTextNode('Ячейка 2'));
  </pre></dir><p> Процедура создания таблицы, собственно говоря, повторяет задание тегов в коде HTML документа (не пропуская тегов, вставляемых по умолчанию). Методом <tt>appendChild(элемент)</tt> любого узла осуществляется добавление к нему потомка - порождаемого этим объектом элемент HTML. В нашем примере этим методом в строку таблицы были добавлены две ячейки, в тело таблицы добавлена строка, а само тело было добавлено к объекту таблицы <tt>Table</tt>. </p><p> Для создания объекта, соответствующего второй ячейке таблицы использован метод <tt>cloneNode()</tt>, который создает объект - полную копию объект, для которого он вызывается, включая его атрибуты и семейство <tt>childNodes</tt>, если в качестве параметра задано значение <tt>true</tt>. Если параметр метода не задан, то используется значение по умолчанию <tt>false</tt>, при котором семейство ссылок на порождаемые объекты не копируется. </p><p> Для включения вновь созданной структуры в документ ее необходимо добавить к объекту <tt>body</tt> методом  <tt>appendChild()</tt>. </p><p> Для манипуляции узлами используются их методы <tt>removeNode()</tt>, <tt>replaceNode()</tt> и <tt>swapNode()</tt>. </p><p> Метод  <tt>removeNode()</tt> удаляет объект, для которого он вызван, из структуры документа. Его единственный параметр может принимать булевы значения <tt>true</tt> или <tt>false</tt>. Значение <tt>true</tt> предписывает удалить и все порожденные данным объектом объекты, тогда как значение <tt>false</tt> (умалчиваемое) удаляет только сам объект, оставляя в документе все подчиненные ему объекты. </p><p> Замену одного объекта другим можно осуществить методом <tt>replaceNode()</tt>, вызываемым для замещаемого объекта. Замещающий объект передается в качестве параметра метода. При замене объекта замещаемый объект удаляется из структуры документа. </p><p> Поменять местами два объекта в иерархии документа позволяет метод <tt>swapNode()</tt>. Меняются местами объект, метод которого вызывается, и объект, определяемый параметром метода. </p><p> Как помним, в объектной модели DHTML, чтобы поменять местами два "равноправных" элемента, например строк таблицы, пришлось видоизменять структуру документа: удалять и добавлять ряды и ячейки. Иначе обстоит дело в объектной модели документа. Методом  <tt>swapNode()</tt> можно просто поменять местами узлы-элементы в структуре документа: </p><dir><pre>
function fncInterchange(row){
   row.swapNode(row.previousSibling);
}
  </pre></dir><p> Параметром этого метода является элемент, с которым необходимо поменять местами текущий элемент. </p><p> Добавив в обработчик событий <tt>onclick</tt> какого-либо ряда таблицы вызов функции <tt>fncInterchange()</tt>, можно простым щелчком на соответствующей строке таблицы переместить ее на одну строку выше. </p><p> В приводимых ниже таблицах собраны все методы и свойства объектной модели DOM для динамической работы с документом HTML. </p><table cellspacing="0" cellpadding="2" border="1">
       Методы и свойства объекта document 
    <tr align="center"><th>Метод/свойство</th><th>Параметры</th><th>Возвращаемое значение</th></tr><tr align="center"><td align="left"><tt>getElementById()</tt></td><td align="left">Строка - значение атрибута <tt>id</tt> элемента</td><td align="left">Узел DOM</td></tr><tr align="center"><td align="left"><tt>getElementsByName()</tt></td><td align="left">Строка - значение атрибута <tt>name</tt> элемента</td><td align="left">Семейство узлов DOM</td></tr><tr align="center"><td align="left"><tt>getElementsByTagName()</tt></td><td align="left">Строка - наименование тега элемента</td><td align="left">Семейство узлов DOM</td></tr><tr align="center"><td align="left"><tt>createElement()</tt></td><td align="left">Строка - наименование тега элемента или открывающий тег элемента с атрибутами</td><td align="left">Узел DOM</td></tr><tr align="center"><td align="left"><tt>createTextNode()</tt></td><td align="left">Строка - содержимое текстового узла</td><td align="left">Узел DOM</td></tr><tr align="center"><td align="left"><tt>createComment()</tt></td><td align="left">Строка - содержимое комментария</td><td align="left">Узел DOM</td></tr><tr align="center"><td align="left"><tt>createAttribute()</tt></td><td align="left">Строка - название атрибута</td><td align="left">Объект-атрибут DOM</td></tr><tr align="center"><td align="left"><tt>documentElement</tt></td><td align="left">&nbsp;</td><td align="left">Объект <tt>HTML</tt></td></tr><tr align="center"><td align="left"><tt>body</tt></td><td align="left">&nbsp;</td><td align="left">Объект <tt>body</tt></td></tr></table><br><table cellspacing="0" cellpadding="2" border="1">
       Свойства узлов DOM 
    <tr align="center"><th>Свойство</th><th>Возвращаемое значение</th></tr><tr align="center"><td align="left"><tt>firstChild</tt></td><td align="left">Первый дочерний узел</td></tr><tr align="center"><td align="left"><tt>lastChild</tt></td><td align="left">Последний дочерний узел</td></tr><tr align="center"><td align="left"><tt>previousSibling</tt></td><td align="left">Предыдущий ближайший узел одного уровня</td></tr><tr align="center"><td align="left"><tt>nextSibling</tt></td><td align="left">Следующий ближайший узел одного уровня</td></tr><tr align="center"><td align="left"><tt>childNodes</tt></td><td align="left">Семейство непосредственно порожденных узлов</td></tr><tr align="center"><td align="left"><tt>nodeName</tt></td><td align="left">Наименование узла</td></tr><tr align="center"><td align="left"><tt>nodeType</tt></td><td align="left">Тип узла</td></tr><tr align="center"><td align="left"><tt>nodeValue</tt></td><td align="left">Значение узла (содержимое текстового узла, для остальных узлов <tt>null</tt>)</td></tr></table><br><table cellspacing="0" cellpadding="2" border="1">
       Методы узлов DOM
    <tr align="center"><th>Метод</th><th>Параметры</th><th>Возвращаемое значение</th></tr><tr align="center"><td align="left"><tt>appendChild()</tt></td><td align="left">Новый дочерний узел</td><td align="left">Добавленный узел</td></tr><tr align="center"><td align="left"><tt>cloneNode()</tt></td><td align="left">Истина - клонировать и дочерние узлы, ложь - клонировать без дочерних</td><td align="left">Новый (клонированный) узел</td></tr><tr align="center"><td align="left"><tt>insertBefore()</tt></td><td align="left">Новый дочерний узел; необязательный параметр - дочерний узел, перед которым требуется вставить новый </td><td align="left">Новый узел</td></tr><tr align="center"><td align="left"><tt>replaceChild()</tt></td><td align="left">Новый дочерний узел и подлежащий замене дочерний узел</td><td align="left">Замещенный узел</td></tr><tr align="center"><td align="left"><tt>replaceNode()</tt></td><td align="left">Новый узел для замены существующего</td><td align="left">Замещенный узел</td></tr><tr align="center"><td align="left"><tt>removeChild()</tt></td><td align="left">Дочерний узел, подлежащий удалению</td><td align="left">Удаленный узел</td></tr><tr align="center"><td align="left"><tt>removeNode()</tt></td><td align="left">Истина - удалить и дочерние элементы, ложь - дочерние оставить</td><td align="left">Удаленный узел</td></tr><tr align="center"><td align="left"><tt>swapNode()</tt></td><td align="left">Узел, с которым исходный меняется местами</td><td align="left">Узел, с которым осуществлялась замены</td></tr><tr align="center"><td align="left"><tt>hasChildNodes()</tt></td><td align="left">Имеет ли узел дочерние - параметров нет</td><td align="left">Истина, если да, ложь - в противном случае</td></tr><tr align="center"><td align="left"><tt>getAttributeNode()</tt></td><td align="left">Строка - название атрибута элемента</td><td align="left">Атрибут в виде объекта <tt>IHTMLDOMAttribute</tt></td></tr><tr align="center"><td align="left"><tt>setAttributeNode()</tt></td><td align="left">Узел-атрибут</td><td align="left">Атрибут в виде объекта <tt>IHTMLDOMAttribute</tt></td></tr><tr align="center"><td align="left"><tt>getElementsByTagName()</tt></td><td align="left">Строка - наименование тега элемента</td><td align="left">Семейство узлов DOM</td></tr></table><br><p> В заключение отметим, что реализация DOM в IE 5.0 не устранила существовавшую, начиная с IE 4.0, объектную модель DHTML. Просто для объектов были добавлены свойства, методы и семейства объектной модели DOM. Так что можно работать с любой из двух моделей и даже "смешивать" их, например, создав элемент в модели DOM, а изменять его содержимое свойствами <tt>innerHTML</tt> и <tt>innerText</tt> объектной модели DHTML. </p><a name="exercise1"></a><table class="exercise"><caption>Упражнение #1. </caption><tr class="exercise"><td><p> Разработать сценарий, отображающий логическую структуру DOM для любого документа HTML. Форму отображения логической структуры разработать самостоятельно. </p></td></tr></table><br><a name="exercise2"></a><table class="exercise"><caption>Упражнение #2. </caption><tr class="exercise"><td><p> Написать сценарий, который при загрузке для всех элементов, непосредственно порождаемых элементом <tt>body</tt>, определяет число непосредственно порождаемых каждым элементом потомков и отобразить с помощью функции <tt>alert()</tt> эту информацию. </p></td></tr></table><br><a name="exercise3"></a><table class="exercise"><caption>Упражнение #3. </caption><tr class="exercise"><td><p> Написать сценарий, который меняет местами два элемента HTML. Пользователь должен щелчком мыши указать эти два элемента. </p></td></tr></table><br><table cellspacing="0" align="center" width="90%" border="0"><tr><td align="left"><a href="index-15.html" tppabs="http://ips.ifmo.ru/courses/webprog/part3/l2/index.html">&lt;&lt;&lt; Предыдущий урок</a></td><td align="right">&nbsp;</td></tr></table><br><br><br></td></tr></table><br></td><td background="dot.gif" tppabs="http://ips.ifmo.ru/img/dot.gif" width="1"><img width="1" src="spacer.gif" tppabs="http://ips.ifmo.ru/img/spacer.gif" height="157"></td></tr><tr><td class="lmenu" width="194" height="9"><font style="font-size:9px;font-family:arial;">Copyright &copy; 2003 IPS</font></td><td colspan="2" align="right"><img src="foot.gif" tppabs="http://ips.ifmo.ru/img/foot.gif"></td></tr></table></td></tr></table></body></html>